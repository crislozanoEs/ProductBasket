// Generated by data binding compiler. Do not edit!
package com.crisav2.productbasket.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.crisav2.productbasket.R;
import com.crisav2.productbasket.views.ft10.viewmodel.AddProductViewModel;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class AddProductFragmentBinding extends ViewDataBinding {
  @NonNull
  public final Button addProduct;

  @NonNull
  public final TextInputEditText amount1Text;

  @NonNull
  public final TextInputEditText amount2Text;

  @NonNull
  public final TextInputLayout amountContainer;

  @NonNull
  public final TextInputEditText amountText;

  @NonNull
  public final TextInputLayout brandContainer;

  @NonNull
  public final TextInputEditText brandText;

  @NonNull
  public final Button cancelAddProduct;

  @NonNull
  public final ConstraintLayout completeDiscountContainer;

  @NonNull
  public final ConstraintLayout containerAmountDiscount;

  @NonNull
  public final ConstraintLayout containerPercentageDiscount;

  @NonNull
  public final SwitchMaterial discountSwitch;

  @NonNull
  public final RadioButton discountType1;

  @NonNull
  public final RadioButton discountType2;

  @NonNull
  public final RadioGroup discountTypeRadio;

  @NonNull
  public final TextView labelPercentageSymbol;

  @NonNull
  public final TextView labelTimesSymbol;

  @NonNull
  public final TextInputLayout percentageAmount1Container;

  @NonNull
  public final TextInputLayout percentageAmount2Container;

  @NonNull
  public final TextInputLayout percentageDiscountContainer;

  @NonNull
  public final TextInputEditText percentageText;

  @NonNull
  public final TextInputLayout priceContainer;

  @NonNull
  public final TextInputEditText priceText;

  @NonNull
  public final TextInputLayout totalToPayContainer;

  @NonNull
  public final TextInputEditText totalToPayText;

  @NonNull
  public final TextInputLayout typeContainer;

  @NonNull
  public final TextInputEditText typeText;

  @Bindable
  protected AddProductViewModel mProductViewModel;

  protected AddProductFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button addProduct, TextInputEditText amount1Text, TextInputEditText amount2Text,
      TextInputLayout amountContainer, TextInputEditText amountText, TextInputLayout brandContainer,
      TextInputEditText brandText, Button cancelAddProduct,
      ConstraintLayout completeDiscountContainer, ConstraintLayout containerAmountDiscount,
      ConstraintLayout containerPercentageDiscount, SwitchMaterial discountSwitch,
      RadioButton discountType1, RadioButton discountType2, RadioGroup discountTypeRadio,
      TextView labelPercentageSymbol, TextView labelTimesSymbol,
      TextInputLayout percentageAmount1Container, TextInputLayout percentageAmount2Container,
      TextInputLayout percentageDiscountContainer, TextInputEditText percentageText,
      TextInputLayout priceContainer, TextInputEditText priceText,
      TextInputLayout totalToPayContainer, TextInputEditText totalToPayText,
      TextInputLayout typeContainer, TextInputEditText typeText) {
    super(_bindingComponent, _root, _localFieldCount);
    this.addProduct = addProduct;
    this.amount1Text = amount1Text;
    this.amount2Text = amount2Text;
    this.amountContainer = amountContainer;
    this.amountText = amountText;
    this.brandContainer = brandContainer;
    this.brandText = brandText;
    this.cancelAddProduct = cancelAddProduct;
    this.completeDiscountContainer = completeDiscountContainer;
    this.containerAmountDiscount = containerAmountDiscount;
    this.containerPercentageDiscount = containerPercentageDiscount;
    this.discountSwitch = discountSwitch;
    this.discountType1 = discountType1;
    this.discountType2 = discountType2;
    this.discountTypeRadio = discountTypeRadio;
    this.labelPercentageSymbol = labelPercentageSymbol;
    this.labelTimesSymbol = labelTimesSymbol;
    this.percentageAmount1Container = percentageAmount1Container;
    this.percentageAmount2Container = percentageAmount2Container;
    this.percentageDiscountContainer = percentageDiscountContainer;
    this.percentageText = percentageText;
    this.priceContainer = priceContainer;
    this.priceText = priceText;
    this.totalToPayContainer = totalToPayContainer;
    this.totalToPayText = totalToPayText;
    this.typeContainer = typeContainer;
    this.typeText = typeText;
  }

  public abstract void setProductViewModel(@Nullable AddProductViewModel ProductViewModel);

  @Nullable
  public AddProductViewModel getProductViewModel() {
    return mProductViewModel;
  }

  @NonNull
  public static AddProductFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.add_product_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static AddProductFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<AddProductFragmentBinding>inflateInternal(inflater, R.layout.add_product_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static AddProductFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.add_product_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static AddProductFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<AddProductFragmentBinding>inflateInternal(inflater, R.layout.add_product_fragment, null, false, component);
  }

  public static AddProductFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static AddProductFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (AddProductFragmentBinding)bind(component, view, R.layout.add_product_fragment);
  }
}
