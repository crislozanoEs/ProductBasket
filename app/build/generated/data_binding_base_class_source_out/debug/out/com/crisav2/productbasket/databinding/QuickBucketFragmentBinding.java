// Generated by data binding compiler. Do not edit!
package com.crisav2.productbasket.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.crisav2.productbasket.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class QuickBucketFragmentBinding extends ViewDataBinding {
  @NonNull
  public final FloatingActionButton buttonAddMore;

  @NonNull
  public final ConstraintLayout footerResume;

  @NonNull
  public final TextView labelTotal;

  @NonNull
  public final TextView labelTotalProducts;

  @NonNull
  public final TextView productsContainer;

  @NonNull
  public final ConstraintLayout productsTotalContainer;

  @NonNull
  public final ConstraintLayout totalContainer;

  @NonNull
  public final TextView totalProductsText;

  @NonNull
  public final TextView totalText;

  protected QuickBucketFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      FloatingActionButton buttonAddMore, ConstraintLayout footerResume, TextView labelTotal,
      TextView labelTotalProducts, TextView productsContainer,
      ConstraintLayout productsTotalContainer, ConstraintLayout totalContainer,
      TextView totalProductsText, TextView totalText) {
    super(_bindingComponent, _root, _localFieldCount);
    this.buttonAddMore = buttonAddMore;
    this.footerResume = footerResume;
    this.labelTotal = labelTotal;
    this.labelTotalProducts = labelTotalProducts;
    this.productsContainer = productsContainer;
    this.productsTotalContainer = productsTotalContainer;
    this.totalContainer = totalContainer;
    this.totalProductsText = totalProductsText;
    this.totalText = totalText;
  }

  @NonNull
  public static QuickBucketFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.quick_bucket_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static QuickBucketFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<QuickBucketFragmentBinding>inflateInternal(inflater, R.layout.quick_bucket_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static QuickBucketFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.quick_bucket_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static QuickBucketFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<QuickBucketFragmentBinding>inflateInternal(inflater, R.layout.quick_bucket_fragment, null, false, component);
  }

  public static QuickBucketFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static QuickBucketFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (QuickBucketFragmentBinding)bind(component, view, R.layout.quick_bucket_fragment);
  }
}
